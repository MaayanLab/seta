type Category implements Node {
  id: ID!
  tag: String
  name: String
  description: String
  datasets(after: String, first: Int, before: String, last: Int): DatasetConnection
}

type CategoryConnection {
  pageInfo: PageInfo!
  edges: [CategoryEdge]
}

type CategoryEdge {
  node: Category
  cursor: String!
}

type Dataset implements Node {
  id: ID!
  title: String
  description: String
}

type DatasetConnection {
  pageInfo: PageInfo!
  edges: [DatasetEdge]
}

type DatasetEdge {
  node: Dataset
  cursor: String!
}

type Group implements Node {
  id: ID!
  name: String
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  node(id: ID!): Node
  group(id: Int, name: String): Group
  category(id: Int, tag: String, name: String): Category
  viewer(id: Int, email: String): Viewer
  dataset(id: Int, title: String, description: String): Dataset
}

type Viewer implements Node {
  id: ID!
  name: String
  email: String
  categories(after: String, first: Int, before: String, last: Int): CategoryConnection
}
